name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build CSS
      run: npm run build-css

    - name: Replace API key
      run: |
        echo "Replacing API key in calendar.js..."
        
        if [ -z "$GOOGLE_SHEETS_API_KEY" ]; then
          echo "ERROR: GOOGLE_SHEETS_API_KEY secret is not set!"
          exit 1
        fi
        
        echo "Before replacement:"
        grep -n "YOUR_API_KEY_HERE" js/calendar.js || echo "Placeholder not found"
        
        # Use Node.js for more reliable replacement
        node -e "
          const fs = require('fs');
          const content = fs.readFileSync('js/calendar.js', 'utf8');
          const newContent = content.replace(/YOUR_API_KEY_HERE/g, process.env.GOOGLE_SHEETS_API_KEY);
          fs.writeFileSync('js/calendar.js', newContent);
          console.log('Replacement completed');
        "
        
        echo "After replacement:"
        grep -n "AIza" js/calendar.js | head -1 || echo "API key not found"
        
        echo "Verifying replacement..."
        if grep -q "YOUR_API_KEY_HERE" js/calendar.js; then
          echo "ERROR: API key replacement failed!"
          echo "Remaining placeholders:"
          grep -n "YOUR_API_KEY_HERE" js/calendar.js
          exit 1
        fi
        echo "API key successfully replaced"
      env:
        GOOGLE_SHEETS_API_KEY: ${{ secrets.GOOGLE_SHEETS_API_KEY }}

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false