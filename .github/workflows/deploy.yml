name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build CSS
      run: npm run build-css

    - name: Replace API key
      run: |
        # Simple and reliable replacement using Node.js
        cat > replace-key.js << 'EOF'
        const fs = require('fs');
        const path = 'js/calendar.js';
        let content = fs.readFileSync(path, 'utf8');
        content = content.replace('YOUR_API_KEY_HERE', process.env.GOOGLE_SHEETS_API_KEY);
        fs.writeFileSync(path, content);
        console.log('API key replaced successfully');
        EOF
        
        node replace-key.js
        rm replace-key.js
        
        # Verify the replacement worked
        if grep -q "YOUR_API_KEY_HERE" js/calendar.js; then
          echo "ERROR: Replacement failed"
          exit 1
        fi
        echo "Replacement verified - API key is now injected"
      env:
        GOOGLE_SHEETS_API_KEY: ${{ secrets.GOOGLE_SHEETS_API_KEY }}

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false